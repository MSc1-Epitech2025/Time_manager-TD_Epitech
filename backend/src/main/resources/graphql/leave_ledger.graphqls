enum LeaveLedgerKind { ACCRUAL, DEBIT, ADJUSTMENT, CARRYOVER_EXPIRE }

type LeaveLedger {
  id: ID!
  account: LeaveAccount!
  entryDate: String!
  kind: LeaveLedgerKind!
  amount: Float!
  referenceAbsence: Absence
  note: String
  createdAt: String
}

input LeaveLedgerCreateInput {
  accountId: ID!
  entryDate: String
  kind: LeaveLedgerKind!
  amount: Float!
  referenceAbsenceId: ID
  note: String
}

input LeaveLedgerUpdateInput {
  id: ID!
  entryDate: String
  amount: Float
  note: String
}

extend type Query {
  leaveLedgerByAccount(accountId: ID!, from: String, to: String): [LeaveLedger!]!
}

extend type Mutation {
  addLeaveLedgerEntry(input: LeaveLedgerCreateInput!): LeaveLedger!
  updateLeaveLedgerEntry(input: LeaveLedgerUpdateInput!): LeaveLedger!
  deleteLeaveLedgerEntry(id: ID!): Boolean!
}
