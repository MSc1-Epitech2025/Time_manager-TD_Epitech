enum WorkDay { MON TUE WED THU FRI SAT SUN }

enum WorkPeriod { AM PM }

type WorkSchedule {
id: ID!
userId: ID!
dayOfWeek: WorkDay!
period: WorkPeriod!
startTime: String!
endTime: String!
}

input WorkScheduleInput {
dayOfWeek: WorkDay!
period: WorkPeriod!
startTime: String! # HH:mm ou HH:mm:ss
endTime: String! # HH:mm ou HH:mm:ss
}

input WorkScheduleBatchInput {
replaceAll: Boolean = true
entries: [WorkScheduleInput!]!
}

extend type Query {
workSchedulesByUser(userId: ID!): [WorkSchedule!]!
myWorkSchedules: [WorkSchedule!]!
}

extend type Mutation {
upsertWorkSchedule(userId: ID!, input: WorkScheduleInput!): WorkSchedule!
upsertMyWorkSchedule(input: WorkScheduleInput!): WorkSchedule!
upsertWorkScheduleBatch(userId: ID!, batch: WorkScheduleBatchInput!): [WorkSchedule!]!
deleteWorkScheduleSlot(userId: ID!, day: WorkDay!, period: WorkPeriod!): Boolean!
deleteMyWorkScheduleSlot(day: WorkDay!, period: WorkPeriod!): Boolean!
}