type LeaveAccount {
  id: ID!
  user: User!
  leaveType: LeaveType!
  openingBalance: Float
  accrualPerMonth: Float
  maxCarryover: Float
  carryoverExpireOn: String
  createdAt: String
  currentBalance: Float! 
}

input LeaveAccountCreateInput {
  userId: ID!
  leaveTypeCode: String!
  openingBalance: Float
  accrualPerMonth: Float
  maxCarryover: Float
  carryoverExpireOn: String
}

input LeaveAccountUpdateInput {
  id: ID!
  openingBalance: Float
  accrualPerMonth: Float
  maxCarryover: Float
  carryoverExpireOn: String
}

extend type Query {
  leaveAccount(id: ID!): LeaveAccount
  leaveAccountsByUser(userId: ID!): [LeaveAccount!]!
}

extend type Mutation {
  createLeaveAccount(input: LeaveAccountCreateInput!): LeaveAccount!
  updateLeaveAccount(input: LeaveAccountUpdateInput!): LeaveAccount!
  deleteLeaveAccount(id: ID!): Boolean!
}
