type User {
    id: ID!
    firstName: String
    lastName: String
    email: String!
    phone: String
    role: String
    poste: String
    avatarUrl: String
}

type AuthResponse {
  ok: Boolean!
}

input AuthRequestInput {
    email: String!
    password: String!
}

input CreateUserInput {
    firstName: String
    lastName: String
    email: String!
    phone: String
    role: String
    poste: String
    password: String!
    avatarUrl: String
}

input UpdateUserInput {
  id: ID!
  firstName: String
  lastName: String
  email: String
  phone: String
  role: String       # can be modify by ADMIN
  poste: String
  avatarUrl: String
  password: String
}


type Query {
    users: [User!]!
    userByEmail(email: String!): User
}

type Mutation {
    login(input: AuthRequestInput!): AuthResponse
    register(input: CreateUserInput!): User!
    updateUserAvatar(id: ID!, avatarUrl: String!): User!
    updateUser(input: UpdateUserInput!): User!
    deleteUser(id: ID!): Boolean!
}
 